{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Cheat Sheet Collection","text":"<p>Custom-made Cheatsheets or links to some useful cheatsheet documents.</p>   \"Le bon Dieu est dans le d\u00e9tail\"* / Der liebe Gott steckt im Detail / God is in the details     - Gustave Flaubert   <p> The \"Gypsy Girl\" is in Zeugma Mosaic Museum </p>"},{"location":"#contents","title":"Contents","text":"<ul> <li>Django</li> <li>LXD</li> <li>Geo Web Services</li> <li>City-Files:<ul> <li>CityGML</li> </ul> </li> <li>X-Files:<ul> <li>XPath</li> </ul> </li> <li>YAML</li> <li>ORACLEDB<ul> <li>SDO_GEOMETRY (ORACLEDB)</li> <li>OracleDB vs PostgreSQL</li> </ul> </li> </ul>"},{"location":"about/","title":"Created for testing purposes","text":""},{"location":"city-files/citygml_vs_gml/","title":"Most Used GML Geometries in CityGML Models","text":"<p>Warning: The visualization is inversely similar to a class diagram and has not been tested against schema definitions.</p> <p></p>"},{"location":"django/django-main/","title":"Django Notes","text":""},{"location":"django/django-main/#basic-cheatsheet","title":"Basic Cheatsheet","text":"<p>Creating a new project :</p> <pre><code>django-admin startproject projectname\n</code></pre> <p>Add an app to a project :</p> <pre><code>python3 manage.py startapp appname\n</code></pre> <p>Starting the server</p> <pre><code>python3 manage.py runserver\n</code></pre> <p>Creating migrations</p> <pre><code>python3 manage.py makemigrations\n</code></pre> <p>Migrate the database</p> <pre><code>python3 manage.py migrate\n</code></pre> <p>Creating a Super User for the admin panel</p> <pre><code>python3 manage.py createsuperuser\n</code></pre> <p>Collecting static files into one folder</p> <pre><code>python3 manage.py collectstatic\n</code></pre>"},{"location":"django/django-main/#my-notes","title":"My Notes","text":""},{"location":"django/django-main/#to-turn-a-simple-request-as-response-on-page","title":"to turn a simple request as response  on page:","text":"<pre><code>from django.http import HttpResponse\nUsage: return HTTPResponse('some text')\n</code></pre>"},{"location":"django/django-main/#to-get-the-response-within-a-defined-template","title":"to get the response within a defined template","text":"<pre><code>from django.shortcuts import render\nUsage: return render(request, 'template_file.html', {some_dictionary})\n</code></pre>"},{"location":"django/django-main/#referencing-to-the-urls-defined-in-urlspy","title":"Referencing to the URLs defined in  urls.py","text":"<pre><code>{%  url 'name_of_the_url' %}\n</code></pre>"},{"location":"django/django-main/#add-the-new-custom-app-to-settingspy","title":"Add the new custom app to settings.py","text":"<pre><code>INSTALLED_APPS = [ '&lt;Folder Name&gt;.&lt;Python File Name (apps.py)&gt;.&lt;Class Name&gt; ' ]\n</code></pre>"},{"location":"django/django-main/#add-custom-app-to-the-admin-page","title":"Add custom app to the admin page:","text":"<pre><code># (add the lines to admin.py of custom app)\nfrom .models import &lt;Class Name&gt;\nadmin.site.register(&lt;Class Name&gt;)\n</code></pre>"},{"location":"django/django-main/#how-to-add-staatic-media-files-into-the-settings-file","title":"How to add staatic media files into the settings file","text":"<p>1- Check if MEDIA_URL and MEDIA_ROOT defined. 2- Add required libraries (in urls.py):</p> <pre><code>from django.conf import settings\nfrom django.conf.urls.static import static\n</code></pre> <p>3- Add the second line to the urlpattern (in urls.py):</p> <pre><code>urlpatterns = [ ... ]\n+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n</code></pre>"},{"location":"django/django-main/#get-all-the-objects-from-the-databse-in-viewpy","title":"Get all the objects from the databse in view.py","text":"<p>.objects SAMPLE:  <pre><code>def homepage(request):\n    posts = Blog.objects\n    return render(request, 'blog/home.html', {'posts': posts})\n</code></pre>"},{"location":"django/django-main/#make-a-loop-for-the-object-instances-in-template-html-file","title":"Make a loop for the object instances in template HTML file","text":"<pre><code>{% for &lt;gany_name_for_instance&gt; in  &lt;sample_objects_collection&gt;.all %}\n    {{  &lt;any_name_for_instance&gt;.&lt;any_attribtue_or_method_of_object&gt; }}\n{% endfor %}\n</code></pre>"},{"location":"django/django-main/#taking-the-id-number-of-any-object-as-url-part-in-urlspy","title":"Taking the ID number of any object as URL part in urls.py","text":"<p>SAMPLE: </p> <pre><code>path('&lt;int:post_id&gt;', views.detail, name='blog_detail')\n</code></pre>"},{"location":"django/django-main/#specify-the-directory-of-the-static-files-uploaded-or-created-in-the-repository-in-settingspy","title":"Specify the directory of the static files uploaded or created in the repository in settings.py","text":"<pre><code>STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, '&lt;relative_path_of_uploaded_files&gt;')\n]\n</code></pre>"},{"location":"django/django-main/#load-static-file-in-html-templates","title":"load static file in HTML templates","text":"<p>In the header:  </p> <pre><code>{% load staticfiles %}\n</code></pre> <p>as content link in anywhere in body: </p> <pre><code>{% static '&lt;file_name_w_extension&gt;' %}\n</code></pre>"},{"location":"django/django-main/#a-sample-for-linking-to-objects-with-aspecific-id-number","title":"A sample for linking to objects with aspecific ID number:","text":"<p>urls.py : urlpatterns : </p> <pre><code>path('&lt;int:blog_id&gt;', views.detail, name='blog_detail') \n</code></pre> <p>views.py : </p> <pre><code>def homepage(request):\n    posts = Blog.objects\n    return render(request, 'blog/home.html', {'posts': posts})\ndef detail(request, blog_id):\n    post_detail = get_object_or_404(Blog, pk=blog_id)\n    return render(request, 'blog/detail.html', {'post_detail': post_detail})\n</code></pre> <p>template HTML:</p> <pre><code>{% for post in posts.all %}\n    &lt;a href=\"{% url 'blog_detail' post.id %}\"&gt;&lt;h3&gt;{{ post.title }}&lt;/h3&gt;&lt;/a&gt;\n{% endfor %}\n</code></pre>"},{"location":"django/django-main/#general-python-notes","title":"General python notes","text":""},{"location":"django/django-main/#sort-lists-with-a-specific-element","title":"Sort lists with a specific element","text":"<p>gets the specified element from the list and use it to sorting the list</p> <pre><code>sorted([('books', 43),('papers', 8),('citations', 126)], key=operator.itemgetter(1), reverse=True)\n# RETURNS:  [('citations', 126), ('books', 43), ('papers', 8)]\n</code></pre> <p>or</p> <pre><code>a.sort(key=lambda elem: elem[1])\n</code></pre>"},{"location":"django/django-main/#format-datetime-data-type-appearance-with-strftime","title":"Format datetime data type appearance with strftime()","text":"<pre><code>&lt;any_datetime_object&gt;.strftime('%b %e %Y') \n# RETURNS Feb 13 2024\n</code></pre> <p>For more detail check:  Python strftime cheatsheet </p>"},{"location":"geo-web-services/geo-web-services/","title":"Geo Web Services","text":"<p>Right click on the (SVG) images and open them in a new window to see them in full size.</p>"},{"location":"geo-web-services/geo-web-services/#web-map-service","title":"Web Map Service","text":"<p>WMS / version 1.3.0</p> <p>WMS Code Template in Python</p> <p></p>"},{"location":"geo-web-services/geo-web-services/#web-map-tile-service","title":"Web Map Tile Service","text":"<p>WMTS / version 1.0.0</p> <p>WMTS Code Template in Python</p> <p></p>"},{"location":"geo-web-services/geo-web-services/#web-feature-service","title":"Web Feature Service","text":"<p>WFS / version 2.0.0</p> <p>WFS Code Template in Python</p> <p></p>"},{"location":"lxd/lxd/","title":"LXD and LXC Notes","text":""},{"location":"lxd/lxd/#how-to-forward-a-port-from-instance-to-the-host","title":"How to forward a port from instance to the host:","text":"<p>In the example below, \"pgpp\" is containers name. \"postgres-forward\" is the name of the rule (device)</p> <pre><code>lxc config device add pgpp postgres-forward proxy listen=tcp:0.0.0.0:5432 connect=tcp:127.0.0.1:5432\n</code></pre> <p>If you want to add port forwarding within a profile, check this website</p>"},{"location":"oracledb/oracledb-vs-postgresql-tricks/","title":"OracleDB vs PostgreSQL - Tips and Tricks","text":""},{"location":"oracledb/oracledb-vs-postgresql-tricks/#oracledb-clauses-and-the-orders","title":"OracleDB - Clauses and the orders","text":"<ul> <li>In OracleDB: -- INSERT INTO must be declared before the WITH clause. -- Every (real) table must be called with it's SCHEMA name. -- Every (real) table must be shorten without AS conjunction. -- Don't use Aliases in GROUP BY clause (?). -- If DUAL needed, call it firstly (?). -- User 0/1 rather than True/False. -- Try to not use quotation with table names (Use with schema names). -- Donot use double colon as type casting. Always use CAST(column AS type) expression.</li> </ul>"},{"location":"oracledb/oracledb-vs-postgresql-tricks/#json-array-aggragation-and-concat","title":"JSON Array Aggragation and CONCAT","text":"Command in PostgreSQL Command in OracleDB ARRAY_AGG JSON_ARRAYAGG anyarray[1] JSON_VALUE(anyarray, '$[0]') CONCAT(1,2,3) = '123' CONCAT(CONCAT(1,2),3)='123' ST_Envelope(geometry) SDO_GEOM_MBR(geometry)"},{"location":"oracledb/oracledb-vs-postgresql-tricks/#unsolved-issues","title":"Unsolved issues","text":"Solution in PostgreSQL Solution in OracleDB json_build_object() JSON_OBJECT? array STRARRAY? unnest &amp; array_position unsolved"},{"location":"oracledb/sdo_geometry/","title":"SDO_GEOMETRY Cheatsheet","text":"<p>SDO_GEOMETRY is the data type stores geometries on OracleDB Spatial package.</p> <p>Main structure of the SDO_GEOMETRY object is like below:</p> <pre><code>SDO_GEOMETRY\n  - SDO_GTYPE\n  - SDO_SRID\n  - SDO_POINT\n    - SDO_POINT_TYPE\n  - SDO_ELEM_INFO_ARRAY\n    - SDO_STARTING_OFFSET\n    - SDO_ETYPE\n    - SDO_INTERPRETATION\n  - SDO_ORDINATES \n</code></pre>"},{"location":"oracledb/sdo_geometry/#table-of-sdo_geometry-elements","title":"Table of SDO_GEOMETRY elements","text":"Level Relevant Object Rule(z) Note 0 SDO_GEOMETRY includes SDO_GTYPE, SDO_SRID, SDO_POINT, SDO_ELEM_INFO_ARRAY, SDO_ORDINATES 1 SDO_GTYPE XXXX: First digit stands for Dimension 2,3,4 XXXX: Second digit stands for linear referencing (measure) system 0, 3 (X,Y,M), 4 (X,Y,Z,M) XXXX: last 2 digits stands for geometry types 01: Point, 02: Line/Curve, 03: Polygon/Surface, 07:Multipolygon, 08:Solid, 09: MultiSolid 1 SDO_SRID SRID code of CRS 1 SDO_POINT This object used if SDO_ELEM_INFO and SDO_ORDINATES is NULL In other words, if only points are stored (not with Linear Referencing and as oriented point). 1 SDO_ELEM_INFO_ARRAY includes SDO_STARTING_OFFSET, SDO_ETYPE and SDO_INTERPRETATION 2 SDO_STARTING_OFFSET Offset in ordinates 2 SDO_ETYPE Codes for geometry types 1003: Exterior (CCW) Simple Polygon, 2003: Interior (CW) Simple Polygon, 1005: Exterior Compound Polygon (w ring), 2005: Interior Compound Polygon (w ring), 1006: Exterior Surface (contains at least 1 polygon), 2006: Interior Surface, 1007: Solid 2 SDO_INTERPRETATION If the geometry is compound than it specifies how many triplets are part of the geometry. 1 SDO_ORDINATES lists and represents the order of the ordinates X, Y, Z, M"},{"location":"x-files/xpath/","title":"XPath","text":""},{"location":"x-files/xpath/#kind-of-nodes","title":"Kind of Nodes","text":"<p>Element, Attribute, Text, Namespace, Processing/Instruction, Comment, Root</p>"},{"location":"x-files/xpath/#expressions-and-wildcards","title":"Expressions and Wildcards","text":"Expression Description A\u00e7\u0131klama(TR) Examples nodename Selects all nodes with the name \"nodename\" \"nodename\" ismine sahip b\u00fct\u00fcn d\u00fc\u011f\u00fcmler --- / Selects from the root node K\u00f6k d\u00fc\u011f\u00fcm --- // Selects nodes in the document from the current node that match the selection no matter where they are Mevcut d\u00fc\u011f\u00fcmden itibaren, nerede oldu\u011funa bakmaks\u0131z\u0131n e\u015fle\u015fen ilk d\u00fc\u011f\u00fcm --- . Selects the cu\u0131rrent node Mevcut d\u00fc\u011f\u00fcm --- .. Selects the parent of the current node Baba d\u00fc\u011f\u00fcm --- @ Selects Attributes \u00d6znitelik --- * Matches any element node E\u015fle\u015fen herhangi bir d\u00fc\u011f\u00fcm --- @* Matches any element node E\u015fele\u015fen herhangi bir \u00f6znitelik --- node() Matches any node of any kind Herhangi bir t\u00fcrdeki herhangi bir d\u00fc\u011f\u00fcm name(), local-name(), namepsace-uri(), position() --- --- --- --- Example Description A\u00e7\u0131klama(TR) --- --- --- /bookstore/* --- \"bookstore\" i\u00e7indeki herhangi bir d\u00fc\u011f\u00fcm //* --- Mevcuttan itibaren d\u00f6k\u00fcmandaki herhangi bir d\u00fc\u011f\u00fcm //title[@*] --- \u00d6zniteli\u011fi olan herhangi bir \"title\" t\u00fcr\u00fcndeki d\u00fc\u011f\u00fcm --- --- ---"},{"location":"x-files/xpath/#predicates-and-operators","title":"Predicates and Operators","text":"PREDICATE/Belirte\u00e7 Description A\u00e7\u0131klama(TR) book[1] Frist node in book \"Book\" eleman\u0131 i\u00e7indeki ilk (\u00e7ocuk) d\u00fc\u011f\u00fcm book[last()] Last node in book \"Book\" i\u00e7indeki son (\u00e7ocuk) d\u00fc\u011f\u00fcm [last()-1] Last but one Sondan bir \u00f6nceki [position&lt;3] First two nodes \u0130lk iki d\u00fc\u011f\u00fcm //title[@lang] Any \"title\" nodes with a \"lang\" attribute D\u00fc\u011f\u00fcm ad\u0131 \"title\" olup, \"lang\" isimli bir \u00f6zniteli\u011fi olan d\u00fc\u011f\u00fcmler /bookstore/book[price&gt;35.00] Alt books in bookstore which are expensive than 35 unit \"Bookstore\" i\u00e7indeki \"Book\"larda fiyat\u0131 35'den fazla olanlar --- --- --- OPERATOR Description A\u00e7\u0131klama(TR) --- --- --- //book/title <code>||</code> //book/price Double pipe used as AND \"Book\" i\u00e7indeki \"title\"lar VE \"book\" i\u00e7indeki \"price\"lar //book <code>|</code> //cd --- \u0130ki d\u00fc\u011f\u00fcm\u00fc bir araya getirir. (+), (-), (div), (*), (=) --- Aritmetik operat\u00f6rler --- --- ---"},{"location":"x-files/xpath/#axes","title":"Axes","text":"AXE/Eksen Description A\u00e7\u0131klama(TR) Ancestor Selects all ancestors (parent, grandparent, etc.) of the current node Bir d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn ATAlar\u0131 ancestor-or-self Selects all ancestors (parent, grandparent, etc.) of the current node and the current node itself Bir d\u00fc\u011f\u00fcm\u00fcn ATAlar\u0131 ve kendisi attribute Selects all attributes of the current node Bir d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn \u00d6ZN\u0130TEL\u0130Kleri child Selects all children of the current node Bir d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn \u00c7OCUKlar\u0131 descendant Selects all descendants (children, grandchildren, etc.) of the current node Bir d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn (alt)NES\u0130Lleri decendant-or-self Selects all descendants (children, grandchildren, etc.) of the current node and the current node itself Bir d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn (alt)NES\u0130Lleri ve kendisi following Selects everything in the document after the closing tag of the current node D\u00f6k\u00fcmanda mevcut d\u00fc\u011f\u00fcmden SONRAK\u0130 her \u015fey following-sibling Selects all siblings after the current node Mevcut d\u00fc\u011f\u00fcmden sonraki b\u00fct\u00fcn KARDE\u015e d\u00fc\u011f\u00fcmler namespace Selects all namespace nodes of the current node Mevcut d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn AD ALANI(namespace) d\u00fc\u011f\u00fcmleri parent Selects the parent of the current node Mevcut d\u00fc\u011f\u00fcm\u00fcn EBEVEYNi preceding Selects all nodes that appear before the current node in the document, except ancestors, attribute nodes and namespace nodes Mevcut d\u00fc\u011f\u00fcmden \u00f6nceki (Mevcudun ATAs\u0131, \u00d6zniteli\u011fi, Ad Alan\u0131 (namespace) hari\u00e7) b\u00fct\u00fcn d\u00fc\u011f\u00fcmler preceding-sibling Selects all siblings before the current node Mevcut d\u00fc\u011f\u00fcmden \u00f6nceki b\u00fct\u00fcn akrde\u015f d\u00fc\u011f\u00fcmler self Selects the current node Mevcut d\u00fc\u011f\u00fcm\u00fcn KEND\u0130si --- --- ---"},{"location":"x-files/xpath/#examples","title":"Examples","text":"Example Description A\u00e7\u0131klama(TR) child::book Selects all book nodes that are children of the current node \"Book\" eleman\u0131n\u0131n b\u00fct\u00fcn \u00c7OCUKlar\u0131 attribute::lang Selects the lang attribute of the current node \"lang\" \u00d6ZN\u0130TEL\u0130\u011e\u0130 child::* Selects all element children of the current node b\u00fct\u00fcn \u00c7OCUKlar\u0131 attribute::* Selects all attributes of the current node B\u00fct\u00fcn \u00d6ZN\u0130TEL\u0130Kleri child::text() Selects all text node children of the current node \u00c7ocuk d\u00fc\u011f\u00fcmlerdeki b\u00fct\u00fcn metin (Text) d\u00fc\u011f\u00fcmleri child::node() Selects all children of the current node B\u00fct\u00fcn \u00c7OCUK d\u00fc\u011f\u00fcmler descendant::book Selects all book descendants of the current node \"Book\"un b\u00fct\u00fcn (alt)NES\u0130L d\u00fc\u011f\u00fcmleri ancestor::book Selects all book ancestors of the current node \"Book\"un b\u00fct\u00fcn ATA d\u00fc\u011f\u00fcmleri ancestor-or-self::book Selects all book ancestors of the current node - and the current as well if it is a book node \"Book\"un b\u00fct\u00fcn ATAlar\u0131 ve KEND\u0130si child::*/child::price Selects all price grandchildren of the current node Mevcut d\u00fc\u011f\u00fcm\u00fcn b\u00fct\u00fcn \u00e7ocuklar\u0131n\u0131n \u00e7ocuklar\u0131n\u0131n (torunlar\u0131n) \"price\" d\u00fc\u011f\u00fcmleri --- --- ---"},{"location":"x-files/xpath/#other-useful-sources","title":"Other Useful Sources","text":"<p>https://devhints.io/xpath</p>"},{"location":"yaml/yaml-main/","title":"YAML Cheatsheet","text":""},{"location":"yaml/yaml-main/#links","title":"Links","text":"<p>onlineyamltools.com</p>"},{"location":"yaml/yaml-main/#characters-and-rules-table","title":"Characters and Rules Table","text":"Relevant Character(s) Rule(z) Note No more spaces! # (hashtag) for single line commenting true / false returns boolean yes / no , on / off - (hypen/dash+space) for creating sequences (list member) [1, 2, 3] (square bracket) also works for creating lists (pipe) used to write multiline strings and to keep as multline string &gt; (greater than) used to write multiline strings and to converts it to single line string $ (dollar) forwards environment variable into strings {{ }} (double curly bracket) placeholder --- (three dash) used as seperator in multi documents &amp; (ampersand) used to declare an object as anchor (like pointers) * (asteriks) used to call the object with anchor with the same name (called as alias) &lt;&lt;: (x2 less than+colon) refers to an object called with an alias, it is possible to override the predefined attribute. !!str / !!int / !!bool data type casting"},{"location":"yaml/yaml-main/#tricks","title":"Tricks","text":"<p>How to escape special characters in a string?</p>"},{"location":"yaml/yaml-main/#html-entity-escape","title":"HTML Entity Escape","text":"<p>Reserved Characters - Mozilla Developer </p>"},{"location":"yaml/yaml-main/#unicode-escape","title":"Unicode Escape","text":"<p>Unicode Characters Table - Rapid Tables</p>"}]}