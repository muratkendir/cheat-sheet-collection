{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Cheat Sheet Collection","title":"Home"},{"location":"#welcome-to-the-cheat-sheet-collection","text":"","title":"Welcome to the Cheat Sheet Collection"},{"location":"about/","text":"Created for testing purposes","title":"About"},{"location":"about/#created-for-testing-purposes","text":"","title":"Created for testing purposes"},{"location":"oracledb/sdo_geometry/","text":"SDO_GEOMETRY Cheatsheet SDO_GEOMETRY is the data type stores geometries on OracleDB Spatial package. Main structure of the SDO_GEOMETRY object is like below: SDO_GEOMETRY - SDO_GTYPE - SDO_SRID - SDO_POINT - SDO_POINT_TYPE - SDO_ELEM_INFO_ARRAY - SDO_STARTING_OFFSET - SDO_ETYPE - SDO_INTERPRETATION - SDO_ORDINATES Table of SDO_GEOMETRY elements Level Relevant Object Rule(z) Note 0 SDO_GEOMETRY includes SDO_GTYPE, SDO_SRID, SDO_POINT, SDO_ELEM_INFO_ARRAY, SDO_ORDINATES 1 SDO_GTYPE XXXX: First digit stands for Dimension 2,3,4 XXXX: Second digit stands for linear referencing (measure) system 0, 3 (X,Y,M), 4 (X,Y,Z,M) XXXX: last 2 digits stands for geometry types 01: Point, 02: Line/Curve, 03: Polygon/Surface, 07:Multipolygon, 08:Solid, 09: MultiSolid 1 SDO_SRID SRID code of CRS 1 SDO_POINT This object used if SDO_ELEM_INFO and SDO_ORDINATES is NULL In other words, if only points are stored (not with Linear Referencing and as oriented point). 1 SDO_ELEM_INFO_ARRAY includes SDO_STARTING_OFFSET, SDO_ETYPE and SDO_INTERPRETATION 2 SDO_STARTING_OFFSET Offset in ordinates 2 SDO_ETYPE Codes for geometry types 1003: Exterior (CCW) Simple Polygon, 2003: Interior (CW) Simple Polygon, 1005: Exterior Compound Polygon (w ring), 2005: Interior Compound Polygon (w ring), 1006: Exterior Surface (contains at least 1 polygon), 2006: Interior Surface, 1007: Solid 2 SDO_INTERPRETATION If the geometry is compound than it specifies how many triplets are part of the geometry. 1 SDO_ORDINATES lists and represents the order of the ordinates X, Y, Z, M {{< rawhtml >}} Level Relevant Object Rule(z) Note 0 SDO_GEOMETRY includes SDO_GTYPE, SDO_SRID, SDO_POINT, SDO_ELEM_INFO_ARRAY, SDO_ORDINATES 1 SDO_GTYPE XXXX: First digit stands for Dimension 2,3,4 XXXX: Second digit stands for linear referencing (measure) system 0, 3 (X,Y,M), 4 (X,Y,Z,M) XXXX: last 2 digits stands for geometry types 01: Point, 02: Line/Curve, 03: Polygon/Surface, 07:Multipolygon, 08:Solid, 09: MultiSolid 1 SDO_SRID SRID code of CRS 1 SDO_POINT This object used if SDO_ELEM_INFO and SDO_ORDINATES is NULL In other words, if only points are stored (not with Linear Referencing and as oriented point). 1 SDO_ELEM_INFO_ARRAY includes SDO_STARTING_OFFSET, SDO_ETYPE and SDO_INTERPRETATION 2 SDO_STARTING_OFFSET Offset in ordinates 2 SDO_ETYPE Codes for geometry types 1003: Exterior (CCW) Simple Polygon, 2003: Interior (CW) Simple Polygon, 1005: Exterior Compound Polygon (w ring), 2005: Interior Compound Polygon (w ring), 1006: Exterior Surface (contains at least 1 polygon), 2006: Interior Surface, 1007: Solid 2 SDO_INTERPRETATION If the geometry is compound than it specifies how many triplets are part of the geometry. 1 SDO_ORDINATES lists and represents the order of the ordinates X, Y, Z, M {{< /rawhtml >}}","title":"SDO_GEOMETRY (ORACLEDB)"},{"location":"oracledb/sdo_geometry/#sdo_geometry-cheatsheet","text":"SDO_GEOMETRY is the data type stores geometries on OracleDB Spatial package. Main structure of the SDO_GEOMETRY object is like below: SDO_GEOMETRY - SDO_GTYPE - SDO_SRID - SDO_POINT - SDO_POINT_TYPE - SDO_ELEM_INFO_ARRAY - SDO_STARTING_OFFSET - SDO_ETYPE - SDO_INTERPRETATION - SDO_ORDINATES","title":"SDO_GEOMETRY Cheatsheet"},{"location":"oracledb/sdo_geometry/#table-of-sdo_geometry-elements","text":"Level Relevant Object Rule(z) Note 0 SDO_GEOMETRY includes SDO_GTYPE, SDO_SRID, SDO_POINT, SDO_ELEM_INFO_ARRAY, SDO_ORDINATES 1 SDO_GTYPE XXXX: First digit stands for Dimension 2,3,4 XXXX: Second digit stands for linear referencing (measure) system 0, 3 (X,Y,M), 4 (X,Y,Z,M) XXXX: last 2 digits stands for geometry types 01: Point, 02: Line/Curve, 03: Polygon/Surface, 07:Multipolygon, 08:Solid, 09: MultiSolid 1 SDO_SRID SRID code of CRS 1 SDO_POINT This object used if SDO_ELEM_INFO and SDO_ORDINATES is NULL In other words, if only points are stored (not with Linear Referencing and as oriented point). 1 SDO_ELEM_INFO_ARRAY includes SDO_STARTING_OFFSET, SDO_ETYPE and SDO_INTERPRETATION 2 SDO_STARTING_OFFSET Offset in ordinates 2 SDO_ETYPE Codes for geometry types 1003: Exterior (CCW) Simple Polygon, 2003: Interior (CW) Simple Polygon, 1005: Exterior Compound Polygon (w ring), 2005: Interior Compound Polygon (w ring), 1006: Exterior Surface (contains at least 1 polygon), 2006: Interior Surface, 1007: Solid 2 SDO_INTERPRETATION If the geometry is compound than it specifies how many triplets are part of the geometry. 1 SDO_ORDINATES lists and represents the order of the ordinates X, Y, Z, M {{< rawhtml >}} Level Relevant Object Rule(z) Note 0 SDO_GEOMETRY includes SDO_GTYPE, SDO_SRID, SDO_POINT, SDO_ELEM_INFO_ARRAY, SDO_ORDINATES 1 SDO_GTYPE XXXX: First digit stands for Dimension 2,3,4 XXXX: Second digit stands for linear referencing (measure) system 0, 3 (X,Y,M), 4 (X,Y,Z,M) XXXX: last 2 digits stands for geometry types 01: Point, 02: Line/Curve, 03: Polygon/Surface, 07:Multipolygon, 08:Solid, 09: MultiSolid 1 SDO_SRID SRID code of CRS 1 SDO_POINT This object used if SDO_ELEM_INFO and SDO_ORDINATES is NULL In other words, if only points are stored (not with Linear Referencing and as oriented point). 1 SDO_ELEM_INFO_ARRAY includes SDO_STARTING_OFFSET, SDO_ETYPE and SDO_INTERPRETATION 2 SDO_STARTING_OFFSET Offset in ordinates 2 SDO_ETYPE Codes for geometry types 1003: Exterior (CCW) Simple Polygon, 2003: Interior (CW) Simple Polygon, 1005: Exterior Compound Polygon (w ring), 2005: Interior Compound Polygon (w ring), 1006: Exterior Surface (contains at least 1 polygon), 2006: Interior Surface, 1007: Solid 2 SDO_INTERPRETATION If the geometry is compound than it specifies how many triplets are part of the geometry. 1 SDO_ORDINATES lists and represents the order of the ordinates X, Y, Z, M {{< /rawhtml >}}","title":"Table of SDO_GEOMETRY elements"},{"location":"yaml/yaml-main/","text":"YAML Cheatsheet Links onlineyamltools.com Characters and Rules Table Relevant Character(s) Rule(z) Note No more spaces! # (hashtag) for single line commenting true / false returns boolean yes / no , on / off - (hypen/dash+space) for creating sequences (list member) [1, 2, 3] (square bracket) also works for creating lists (pipe) used to write multiline strings and to keep as multline string > (greater than) used to write multiline strings and to converts it to single line string $ (dollar) forwards environment variable into strings {{ }} (double curly bracket) placeholder --- (three dash) used as seperator in multi documents & (ampersand) used to declare an object as anchor (like pointers) * (asteriks) used to call the object with anchor with the same name (called as alias) <<: (x2 less than+colon) refers to an object called with an alias, it is possible to override the predefined attribute. !!str / !!int / !!bool data type casting Tricks How to escape special characters in a string? HTML Entity Escape Reserved Characters - Mozilla Developer Unicode Escape Unicode Characters Table - Rapid Tables","title":"YAML"},{"location":"yaml/yaml-main/#yaml-cheatsheet","text":"","title":"YAML Cheatsheet"},{"location":"yaml/yaml-main/#links","text":"onlineyamltools.com","title":"Links"},{"location":"yaml/yaml-main/#characters-and-rules-table","text":"Relevant Character(s) Rule(z) Note No more spaces! # (hashtag) for single line commenting true / false returns boolean yes / no , on / off - (hypen/dash+space) for creating sequences (list member) [1, 2, 3] (square bracket) also works for creating lists (pipe) used to write multiline strings and to keep as multline string > (greater than) used to write multiline strings and to converts it to single line string $ (dollar) forwards environment variable into strings {{ }} (double curly bracket) placeholder --- (three dash) used as seperator in multi documents & (ampersand) used to declare an object as anchor (like pointers) * (asteriks) used to call the object with anchor with the same name (called as alias) <<: (x2 less than+colon) refers to an object called with an alias, it is possible to override the predefined attribute. !!str / !!int / !!bool data type casting","title":"Characters and Rules Table"},{"location":"yaml/yaml-main/#tricks","text":"How to escape special characters in a string?","title":"Tricks"},{"location":"yaml/yaml-main/#html-entity-escape","text":"Reserved Characters - Mozilla Developer","title":"HTML Entity Escape"},{"location":"yaml/yaml-main/#unicode-escape","text":"Unicode Characters Table - Rapid Tables","title":"Unicode Escape"}]}